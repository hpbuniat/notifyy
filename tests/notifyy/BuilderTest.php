<?php
namespace notifyy;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-02-10 at 12:54:30.
 */
class BuilderTest extends \PHPUnit_Framework_TestCase {


    /**
     * Test building an adapter
     *
     * @dataProvider buildProvider
     */
    public function testBuildAdapter($mAdapter, $mConfig = null) {
        $oNotifier = Builder::build($mAdapter, $mConfig);
        $this->assertInstanceOf('\notifyy\Notifyable', $oNotifier);

        $oNotifier->notify(Notifyable::SUCCESS, md5(time()));
    }

    /**
     * Test building multiple adapters
     */
    public function testBuild() {
        $oNotifier = Builder::build($this->buildProvider());
        $this->assertInstanceOf('\notifyy\Notifyable', $oNotifier);
        $this->assertEquals(4, $oNotifier->count());

        $oNotifier->notify(Notifyable::SUCCESS, md5(time()));
    }

    /**
     * Return some working arguments
     *
     * @return array
     */
    public function buildProvider() {
        return array(
            array(
                'stdout',
                null
            ),
            array(
                'GroWl'
            ),
            array(
                'LIBNOTIFY',
                new \stdClass()
            ),
            array(
                'File',
                array(
                    'path' => '/tmp'
                )
            ),
            array(
                'File',
                array(
                )
            ),
            array(
                '\\notifyy\\Adapter\\libnotify'
            ),
            array(
                new \notifyy\Adapter\Growl()
            ),
            array(
                null
            )
        );
    }

    /**
     * Test a failing build
     */
    public function testFailingBuild() {
        $this->setExpectedException('\notifyy\Exception', \notifyy\Exception::UNKNOWN_ADAPTER);
        Builder::build('test');
    }
}
